{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-repeat.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/hooks/use-judge-api.ts","webpack:///./src/pages/judge.tsx"],"names":["$export","P","repeat","toInteger","defined","module","exports","count","str","String","this","res","n","Infinity","RangeError","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","fetchApi","text","a","url","baseURL","encodeURIComponent","fetch","json","validate","replace","useJudgeApi","useState","isSubmitting","setIsSubmitting","setResult","setText","setError","useEffect","all","results","integratedResult","reduce","previous","current","catch","e","judge","Component","onSubmit","onInput","className","inputTextRef","showScore","forceShowScore","scoreInt","Math","ceil","score","scoreStar","shareText","as","id","title","description","pathname","htmlFor","onChange","placeholder","disabled","required","minLength","ref","autoFocus","sns","onClick","message","StyledComponent","css","margin","borderColor","JudgePage","useRef","forcedShowScore","setForcedShowScore","event","currentTarget","setCustomValidity","preventDefault","is_dajare"],"mappings":"8EAAA,IAAIA,EAAU,EAAQ,QAEtBA,EAAQA,EAAQC,EAAG,SAAU,CAE3BC,OAAQ,EAAQ,W,kCCHlB,IAAIC,EAAY,EAAQ,QACpBC,EAAU,EAAQ,QAEtBC,EAAOC,QAAU,SAAgBC,GAC/B,IAAIC,EAAMC,OAAOL,EAAQM,OACrBC,EAAM,GACNC,EAAIT,EAAUI,GAClB,GAAIK,EAAI,GAAKA,GAAKC,IAAU,MAAMC,WAAW,2BAC7C,KAAMF,EAAI,GAAIA,KAAO,KAAOJ,GAAOA,GAAc,EAAJI,IAAOD,GAAOH,GAC3D,OAAOG,I,qBCVTN,EAAOC,QAAU,EAAQ,S,qBCAzB,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAQR,IAAIS,EAAU,SAAUT,GACtB,aAEA,IAAIU,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAGZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQb,qBAAqBiB,EAAYJ,EAAUI,EAC/EC,EAAYnB,OAAOoB,OAAOH,EAAehB,WACzCoB,EAAU,IAAIC,EAAQN,GAAe,IAIzC,OADAG,EAAUI,QA+LZ,SAA0BV,EAASE,EAAMM,GACvC,IAAIG,EAnKuB,iBAoK3B,OAAO,SAAgBC,EAAQC,GAC7B,GAnKoB,cAmKhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAtKoB,cAsKhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,OAAOE,IAMT,IAHAP,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAIG,EAAWR,EAAQQ,SAEvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUR,GAEnD,GAAIS,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBT,EAAQI,OAGVJ,EAAQY,KAAOZ,EAAQa,MAAQb,EAAQK,SAClC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAvMqB,mBAuMjBD,EAEF,MADAA,EArMc,YAsMRH,EAAQK,IAGhBL,EAAQc,kBAAkBd,EAAQK,SACN,WAAnBL,EAAQI,QACjBJ,EAAQe,OAAO,SAAUf,EAAQK,KAGnCF,EA/MkB,YAgNlB,IAAIa,EAASC,EAASzB,EAASE,EAAMM,GAErC,GAAoB,WAAhBgB,EAAOE,KAAmB,CAK5B,GAFAf,EAAQH,EAAQmB,KApNA,YAFK,iBAwNjBH,EAAOX,MAAQM,EACjB,SAGF,MAAO,CACLS,MAAOJ,EAAOX,IACdc,KAAMnB,EAAQmB,MAES,UAAhBH,EAAOE,OAChBf,EA/NgB,YAkOhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,OAnQPgB,CAAiB7B,EAASE,EAAMM,GAC7CF,EAcT,SAASmB,EAASK,EAAIC,EAAKlB,GACzB,IACE,MAAO,CACLa,KAAM,SACNb,IAAKiB,EAAGE,KAAKD,EAAKlB,IAEpB,MAAOoB,GACP,MAAO,CACLP,KAAM,QACNb,IAAKoB,IApBXzD,EAAQuB,KAAOA,EAyBf,IAMIoB,EAAmB,GAKvB,SAASd,KAET,SAAS6B,KAET,SAASC,KAIT,IAAIC,EAAoB,GAExBA,EAAkB3C,GAAkB,WAClC,OAAOb,MAGT,IAAIyD,EAAWlD,OAAOmD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAE/DD,GAA2BA,IAA4BrD,GAAMG,EAAO2C,KAAKO,EAAyB9C,KAGpG2C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B/C,UAAYiB,EAAUjB,UAAYD,OAAOoB,OAAO6B,GAMpF,SAASM,EAAsBtD,GAC7B,CAAC,OAAQ,QAAS,UAAUuD,SAAQ,SAAU/B,GAC5CxB,EAAUwB,GAAU,SAAUC,GAC5B,OAAOjC,KAAK8B,QAAQE,EAAQC,OAqClC,SAAS+B,EAActC,EAAWuC,GAgChC,IAAIC,EA4BJlE,KAAK8B,QA1BL,SAAiBE,EAAQC,GACvB,SAASkC,IACP,OAAO,IAAIF,GAAY,SAAUG,EAASC,IAnC9C,SAASC,EAAOtC,EAAQC,EAAKmC,EAASC,GACpC,IAAIzB,EAASC,EAASnB,EAAUM,GAASN,EAAWO,GAEpD,GAAoB,UAAhBW,EAAOE,KAEJ,CACL,IAAIyB,EAAS3B,EAAOX,IAChBe,EAAQuB,EAAOvB,MAEnB,OAAIA,GAA0B,iBAAVA,GAAsBvC,EAAO2C,KAAKJ,EAAO,WACpDiB,EAAYG,QAAQpB,EAAMwB,SAASC,MAAK,SAAUzB,GACvDsB,EAAO,OAAQtB,EAAOoB,EAASC,MAC9B,SAAUhB,GACXiB,EAAO,QAASjB,EAAKe,EAASC,MAI3BJ,EAAYG,QAAQpB,GAAOyB,MAAK,SAAUC,GAI/CH,EAAOvB,MAAQ0B,EACfN,EAAQG,MACP,SAAUI,GAGX,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAtBzCA,EAAOzB,EAAOX,KAgCZqC,CAAOtC,EAAQC,EAAKmC,EAASC,MAIjC,OAAOH,EAYPA,EAAkBA,EAAgBO,KAAKN,EAEvCA,GAA8BA,KAyGlC,SAAS7B,EAAoBF,EAAUR,GACrC,IAAII,EAASI,EAAStB,SAASc,EAAQI,QAEvC,QA9RE4C,IA8RE5C,EAAsB,CAKxB,GAFAJ,EAAQQ,SAAW,KAEI,UAAnBR,EAAQI,OAAoB,CAE9B,GAAII,EAAStB,SAAiB,SAG5Bc,EAAQI,OAAS,SACjBJ,EAAQK,SAzSZ2C,EA0SItC,EAAoBF,EAAUR,GAEP,UAAnBA,EAAQI,QAGV,OAAOO,EAIXX,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAAU,kDAG9B,OAAOtC,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAAStB,SAAUc,EAAQK,KAEzD,GAAoB,UAAhBW,EAAOE,KAIT,OAHAlB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,IACrBL,EAAQQ,SAAW,KACZG,EAGT,IAAIuC,EAAOlC,EAAOX,IAElB,OAAK6C,EAODA,EAAK/B,MAGPnB,EAAQQ,EAAS2C,YAAcD,EAAK9B,MAEpCpB,EAAQoD,KAAO5C,EAAS6C,QAOD,WAAnBrD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SA1VV2C,GAmWFhD,EAAQQ,SAAW,KACZG,GANEuC,GAxBPlD,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAI4C,UAAU,oCAC5BjD,EAAQQ,SAAW,KACZG,GA+CX,SAAS2C,EAAaC,GACpB,IAAIC,EAAQ,CACVC,OAAQF,EAAK,IAGX,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBnF,KAAKyF,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIxC,EAASwC,EAAMQ,YAAc,GACjChD,EAAOE,KAAO,gBACPF,EAAOX,IACdmD,EAAMQ,WAAahD,EAGrB,SAASf,EAAQN,GAIfvB,KAAKyF,WAAa,CAAC,CACjBJ,OAAQ,SAEV9D,EAAYwC,QAAQmB,EAAclF,MAClCA,KAAK6F,OAAM,GAgCb,SAASjC,EAAOkC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASjF,GAE9B,GAAIkF,EACF,OAAOA,EAAe3C,KAAK0C,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EACLlB,EAAO,SAASA,IAClB,OAASkB,EAAIJ,EAASG,QACpB,GAAIxF,EAAO2C,KAAK0C,EAAUI,GAGxB,OAFAlB,EAAKhC,MAAQ8C,EAASI,GACtBlB,EAAKjC,MAAO,EACLiC,EAMX,OAFAA,EAAKhC,WA/cT4B,EAgdII,EAAKjC,MAAO,EACLiC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CACLA,KAAM7C,GAMV,SAASA,IACP,MAAO,CACLa,WAleA4B,EAmeA7B,MAAM,GA+LV,OAplBAO,EAAkB9C,UAAYqD,EAAGsC,YAAc5C,EAC/CA,EAA2B4C,YAAc7C,EACzCC,EAA2BtC,GAAqBqC,EAAkB8C,YAAc,oBAWhFxG,EAAQyG,oBAAsB,SAAUC,GACtC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IAAOA,IAASjD,GAEa,uBAAnCiD,EAAKH,aAAeG,EAAKC,QAG5B5G,EAAQ6G,KAAO,SAAUH,GAYvB,OAXI/F,OAAOmG,eACTnG,OAAOmG,eAAeJ,EAAQ/C,IAE9B+C,EAAOK,UAAYpD,EAEbtC,KAAqBqF,IACzBA,EAAOrF,GAAqB,sBAIhCqF,EAAO9F,UAAYD,OAAOoB,OAAOkC,GAC1ByC,GAOT1G,EAAQgH,MAAQ,SAAU3E,GACxB,MAAO,CACLuC,QAASvC,IAmEb6B,EAAsBE,EAAcxD,WAEpCwD,EAAcxD,UAAUO,GAAuB,WAC7C,OAAOf,MAGTJ,EAAQoE,cAAgBA,EAIxBpE,EAAQiH,MAAQ,SAAUzF,EAASC,EAASC,EAAMC,EAAa0C,QACzC,IAAhBA,IAAwBA,EAAc6C,SAC1C,IAAIC,EAAO,IAAI/C,EAAc7C,EAAKC,EAASC,EAASC,EAAMC,GAAc0C,GACxE,OAAOrE,EAAQyG,oBAAoBhF,GAAW0F,EAC5CA,EAAK/B,OAAOP,MAAK,SAAUF,GAC3B,OAAOA,EAAOxB,KAAOwB,EAAOvB,MAAQ+D,EAAK/B,WAgK7ClB,EAAsBD,GACtBA,EAAG5C,GAAqB,YAMxB4C,EAAGhD,GAAkB,WACnB,OAAOb,MAGT6D,EAAGmD,SAAW,WACZ,MAAO,sBAsCTpH,EAAQqH,KAAO,SAAUC,GACvB,IAAID,EAAO,GAEX,IAAK,IAAIE,KAAOD,EACdD,EAAKvB,KAAKyB,GAMZ,OAHAF,EAAKG,UAGE,SAASpC,IACd,KAAOiC,EAAKhB,QAAQ,CAClB,IAAIkB,EAAMF,EAAKI,MAEf,GAAIF,KAAOD,EAGT,OAFAlC,EAAKhC,MAAQmE,EACbnC,EAAKjC,MAAO,EACLiC,EAQX,OADAA,EAAKjC,MAAO,EACLiC,IA0CXpF,EAAQgE,OAASA,EASjB/B,EAAQrB,UAAY,CAClB2F,YAAatE,EACbgE,MAAO,SAAeyB,GAYpB,GAXAtH,KAAKuH,KAAO,EACZvH,KAAKgF,KAAO,EAGZhF,KAAKwC,KAAOxC,KAAKyC,WA9ejBmC,EA+eA5E,KAAK+C,MAAO,EACZ/C,KAAKoC,SAAW,KAChBpC,KAAKgC,OAAS,OACdhC,KAAKiC,SAlfL2C,EAmfA5E,KAAKyF,WAAW1B,QAAQ4B,IAEnB2B,EACH,IAAK,IAAId,KAAQxG,KAEQ,MAAnBwG,EAAKgB,OAAO,IAAc/G,EAAO2C,KAAKpD,KAAMwG,KAAUR,OAAOQ,EAAKiB,MAAM,MAC1EzH,KAAKwG,QAzfX5B,IA8fF8C,KAAM,WACJ1H,KAAK+C,MAAO,EACZ,IACI4E,EADY3H,KAAKyF,WAAW,GACLG,WAE3B,GAAwB,UAApB+B,EAAW7E,KACb,MAAM6E,EAAW1F,IAGnB,OAAOjC,KAAK4H,MAEdlF,kBAAmB,SAA2BmF,GAC5C,GAAI7H,KAAK+C,KACP,MAAM8E,EAGR,IAAIjG,EAAU5B,KAEd,SAAS8H,EAAOC,EAAKC,GAYnB,OAXApF,EAAOE,KAAO,QACdF,EAAOX,IAAM4F,EACbjG,EAAQoD,KAAO+C,EAEXC,IAGFpG,EAAQI,OAAS,OACjBJ,EAAQK,SAzhBZ2C,KA4hBWoD,EAGX,IAAK,IAAI9B,EAAIlG,KAAKyF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQpF,KAAKyF,WAAWS,GACxBtD,EAASwC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAUrF,KAAKuH,KAAM,CAC7B,IAAIU,EAAWxH,EAAO2C,KAAKgC,EAAO,YAC9B8C,EAAazH,EAAO2C,KAAKgC,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIlI,KAAKuH,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAItF,KAAKuH,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAEjB,GAAI0C,GACT,GAAIjI,KAAKuH,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAE3B,KAAI4C,EAKT,MAAM,IAAIhG,MAAM,0CAJhB,GAAIlC,KAAKuH,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAQ9B5C,OAAQ,SAAgBG,EAAMb,GAC5B,IAAK,IAAIiE,EAAIlG,KAAKyF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQpF,KAAKyF,WAAWS,GAE5B,GAAId,EAAMC,QAAUrF,KAAKuH,MAAQ9G,EAAO2C,KAAKgC,EAAO,eAAiBpF,KAAKuH,KAAOnC,EAAMG,WAAY,CACjG,IAAI4C,EAAe/C,EACnB,OAIA+C,IAA0B,UAATrF,GAA6B,aAATA,IAAwBqF,EAAa9C,QAAUpD,GAAOA,GAAOkG,EAAa5C,aAGjH4C,EAAe,MAGjB,IAAIvF,EAASuF,EAAeA,EAAavC,WAAa,GAItD,OAHAhD,EAAOE,KAAOA,EACdF,EAAOX,IAAMA,EAETkG,GACFnI,KAAKgC,OAAS,OACdhC,KAAKgF,KAAOmD,EAAa5C,WAClBhD,GAGFvC,KAAKoI,SAASxF,IAEvBwF,SAAU,SAAkBxF,EAAQ4C,GAClC,GAAoB,UAAhB5C,EAAOE,KACT,MAAMF,EAAOX,IAaf,MAVoB,UAAhBW,EAAOE,MAAoC,aAAhBF,EAAOE,KACpC9C,KAAKgF,KAAOpC,EAAOX,IACM,WAAhBW,EAAOE,MAChB9C,KAAK4H,KAAO5H,KAAKiC,IAAMW,EAAOX,IAC9BjC,KAAKgC,OAAS,SACdhC,KAAKgF,KAAO,OACa,WAAhBpC,EAAOE,MAAqB0C,IACrCxF,KAAKgF,KAAOQ,GAGPjD,GAET8F,OAAQ,SAAgB9C,GACtB,IAAK,IAAIW,EAAIlG,KAAKyF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQpF,KAAKyF,WAAWS,GAE5B,GAAId,EAAMG,aAAeA,EAGvB,OAFAvF,KAAKoI,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP7C,IAIb,MAAS,SAAgB8C,GACvB,IAAK,IAAIa,EAAIlG,KAAKyF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQpF,KAAKyF,WAAWS,GAE5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIzC,EAASwC,EAAMQ,WAEnB,GAAoB,UAAhBhD,EAAOE,KAAkB,CAC3B,IAAIwF,EAAS1F,EAAOX,IACpB0D,EAAcP,GAGhB,OAAOkD,GAMX,MAAM,IAAIpG,MAAM,0BAElBqG,cAAe,SAAuBzC,EAAUf,EAAYE,GAa1D,OAZAjF,KAAKoC,SAAW,CACdtB,SAAU8C,EAAOkC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBjF,KAAKgC,SAGPhC,KAAKiC,SAxpBP2C,GA2pBOrC,IAOJ3C,EAvqBK,CA4qBeD,EAAOC,SAEpC,IACE4I,mBAAqBnI,EACrB,MAAOoI,GAUPC,SAAS,IAAK,yBAAdA,CAAwCrI,K,8hCCvsB1C,IASMsI,EAAQ,e,EAAA,G,EAAA,UAAG,WACf7F,EACA8F,GAFe,iBAAAC,EAAA,6DAITC,EAASC,sIAAkBjG,EAJlB,WAIiCkG,mBAAmBJ,GAJpD,SAMMK,MAAMH,GANZ,cAMTvE,EANS,yBAORA,EAAO2E,QAPC,0C,+KAAH,wDAUDC,EAAW,SAACP,GAAD,OACa,IAAnCA,EAAKQ,QAAQ,MAAO,IAAInD,QA6CXoD,EA3CK,WAAmB,MACGC,oBACtC,GADKC,EAD8B,KAChBC,EADgB,OAITF,mBAAgC,MAArD/E,EAJ8B,KAItBkF,EAJsB,OAKbH,mBAA2B,MAA5CV,EAL8B,KAKxBc,EALwB,OAMXJ,mBAA+B,MAAlD3E,EAN8B,KAMvBgF,EANuB,KAwCrC,OAhCAC,qBAAU,WACR,OAAa,OAAThB,GAA0B,KAATA,GACnBY,GAAgB,GAET,eAGTA,GAAgB,GAChBC,EAAU,MAEV3C,QAAQ+C,IAAI,CACVlB,EAAS,QAASC,GAClBD,EAAS,OAAQC,GACjBD,EAAS,UAAWC,KAEnBnE,MAAK,SAACqF,GACL,IAAMC,EAAmBD,EAAQE,QAC/B,SAACC,EAAUC,GAAX,cAA6BD,GAAaC,KAC1C,IAEFV,GAAgB,GAChBC,EAAUM,MAEXI,OAAM,SAACC,GACNT,EAASS,MAGN,WACLZ,GAAgB,OAEjB,CAACZ,IAEG,CAAEW,eAAcc,MAAOX,EAASnF,SAAQI,U,wBCrD3C2F,EAAsC,SAAC,GAWvC,MAVJC,EAUI,EAVJA,SACA3B,EASI,EATJA,KACA4B,EAQI,EARJA,QACAjG,EAOI,EAPJA,OACAI,EAMI,EANJA,MACA4E,EAKI,EALJA,aACAkB,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAC,EACI,EADJA,eAEMC,EAAWC,KAAKC,KAAL,UAAUxG,aAAV,EAAUA,EAAQyG,aAAlB,QAA2B,GACtCC,EACJ1G,GAAU,GAAG,IAAI/E,OAAOqL,GAAY,IAAIrL,OAAO,EAAIqL,GAE/CK,EAAaP,EAEfM,GAAS,QACDrC,EADC,SACYqC,EADZ,qEAFK,QACNrC,EADM,uFAKlB,OACE,YAAC,IAAD,CAAKuC,GAAG,OAAOC,GAAG,OAAOX,UAAWA,GAClC,YAAC,IAAD,CACEY,MAAM,SACNC,YAAY,kBACZC,SAAS,WAEX,YAAC,IAAD,MACA,YAAC,IAAD,CAASJ,GAAG,MAAZ,UACA,YAAC,IAAD,wBACA,YAAC,IAAD,kCACA,oBAAMZ,SAAUA,GACd,YAAC,IAAD,CAAOiB,QAAQ,WACf,mBAAKf,UAAU,eACb,YAAC,IAAD,CACE3H,KAAK,OACL0D,KAAK,SACLxD,MAAO4F,EACP6C,SAAUjB,EACVkB,YAAY,WACZC,SAAUpC,EACVqC,UAAQ,EACRnB,UAAU,aACVoB,UAAW,EACXC,IAAKpB,EACLqB,WAAS,IAEX,YAAC,IAAD,CAAQjJ,KAAK,SAAS2H,UAAU,SAASkB,SAAUpC,GAAnD,UAKS,OAAXhF,GAAmBgF,IACnB,YAAC,IAAD,CAAKkB,UAAU,UACZlB,GAAgB,YAAC,IAAD,CAASkB,UAAU,YACxB,OAAXlG,IAAoBoG,GACnB,YAAC,IAAD,oBAEDA,GACC,YAAC,IAAD,qBAEGM,EAFH,QAQN,mBAAKR,UAAU,WACZlG,GAAU2G,GAAa,YAAC,IAAD,CAAac,IAAI,UAAUpD,KAAMsC,IAC7C,OAAX3G,IAAoBoG,GACnB,YAAC,IAAD,CAAQ7H,KAAK,SAASmJ,QAASrB,GAA/B,gBAKHjG,GACC,YAAC,IAAD,KAEoB,iBAAVA,EACJA,EACyB,iBAAlBA,EAAMuH,QACbvH,EAAMuH,QACN,gBAQRC,EAAkB,YAAO7B,EAAP,qBAAH,wEAWf8B,YAAI,CAAEC,OAAQ,IAXC,uKAwBfD,YAAI,CAAEE,YAAa,UAxBJ,qIAyFNC,UA7Ca,WAAM,MACRjD,mBAAiB,IAAlCV,EADyB,KACnBc,EADmB,OAEeL,IAAvC9E,EAFwB,EAExBA,OAAQgF,EAFgB,EAEhBA,aAAcc,EAFE,EAEFA,MAAO1F,EAFL,EAEKA,MAC/B+F,EAAe8B,iBAAyB,MAHd,EAIclD,oBAAkB,GAAzDmD,EAJyB,KAIRC,EAJQ,KA8BhC,OACE,YAACP,EAAD,CACEvD,KAAMA,EACNrE,OAAQA,EACRI,MAAOA,EACP4E,aAAcA,EACdiB,QAtBuC,SAACmC,GAAU,IAM/B,EAEd,EAPC3J,EAAU2J,EAAMC,cAAhB5J,OAER0G,EAAQ1G,GAGJmG,EAASnG,IACX,UAAA0H,EAAaR,eAAb,SAAsB2C,kBAAkB,IAExC,UAAAnC,EAAaR,eAAb,SAAsB2C,kBACpB,qBAaFtC,SA/ByC,SAACoC,GAC5CA,EAAMG,iBAENJ,GAAmB,GAEfvD,EAASP,IAAOyB,EAAMzB,IA2BxB8B,aAAcA,EACdC,WAAWpG,aAAA,EAAAA,EAAQwI,YAAaN,EAChC7B,eAAgB,kBAAY8B,GAAmB","file":"component---src-pages-judge-tsx-74421dc10c20f4e61c0b.js","sourcesContent":["var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","module.exports = require(\"regenerator-runtime\");\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","import { useState, useEffect } from 'react';\nimport {\n  IntegratedResult,\n  JudgeResult,\n  EvalResult,\n  ReadingResult,\n} from 'src/types/api';\n\nexport type JudgeText = string;\n\nexport type ReturnValue = {\n  isSubmitting: boolean;\n  judge: (text: JudgeText) => void;\n  result: IntegratedResult | null;\n  error: string | Error | null;\n};\n\nconst baseURL =\n  'https://script.google.com/macros/s/AKfycbz6gJafNJO-Q8R5fqOP5XiklkVqeJAaePpDTcHIowR4JSxkRqr_/exec?url=http://abelab.dev:8080';\n\nexport type Results = {\n  judge: JudgeResult;\n  eval: EvalResult;\n  reading: ReadingResult;\n};\n\nconst fetchApi = async <T extends keyof Results>(\n  type: T,\n  text: string\n): Promise<Results[T]> => {\n  const url = `${baseURL}/dajare/${type}?dajare=${encodeURIComponent(text)}`;\n\n  const result = await fetch(url);\n  return result.json();\n};\n\nexport const validate = (text: string): boolean =>\n  text.replace(/\\s/g, '').length !== 0;\n\nconst useJudgeApi = (): ReturnValue => {\n  const [isSubmitting, setIsSubmitting] = useState<ReturnValue['isSubmitting']>(\n    false\n  );\n  const [result, setResult] = useState<ReturnValue['result']>(null);\n  const [text, setText] = useState<JudgeText | null>(null);\n  const [error, setError] = useState<ReturnValue['error']>(null);\n\n  useEffect((): (() => void) => {\n    if (text === null || text === '') {\n      setIsSubmitting(false);\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return (): void => {};\n    }\n\n    setIsSubmitting(true);\n    setResult(null);\n\n    Promise.all([\n      fetchApi('judge', text),\n      fetchApi('eval', text),\n      fetchApi('reading', text),\n    ])\n      .then((results) => {\n        const integratedResult = results.reduce<Partial<IntegratedResult>>(\n          (previous, current) => ({ ...previous, ...current }),\n          {}\n        );\n        setIsSubmitting(false);\n        setResult(integratedResult as IntegratedResult);\n      })\n      .catch((e) => {\n        setError(e);\n      });\n\n    return (): void => {\n      setIsSubmitting(false);\n    };\n  }, [text]);\n\n  return { isSubmitting, judge: setText, result, error };\n};\n\nexport default useJudgeApi;\n","import React, { useState, useRef } from 'react';\nimport {\n  Heading,\n  Label,\n  Input,\n  Button,\n  Box,\n  css,\n  Spinner,\n  Message,\n} from 'theme-ui';\nimport Paragraph from 'src/components/paragraph';\nimport useJudgeApi, { ReturnValue, validate } from 'src/hooks/use-judge-api';\nimport styled from '@emotion/styled';\nimport { SEO, ShareButton, Header } from 'src/components';\n\ntype ComponentProps = {\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  onInput: (event: React.FormEvent<HTMLInputElement>) => void;\n  text: string;\n  className?: string;\n  inputTextRef: React.Ref<HTMLInputElement>;\n  showScore: boolean;\n  forceShowScore: () => unknown;\n} & Omit<ReturnValue, 'judge'>;\n\nconst Component: React.FC<ComponentProps> = ({\n  onSubmit,\n  text,\n  onInput,\n  result,\n  error,\n  isSubmitting,\n  className,\n  inputTextRef,\n  showScore,\n  forceShowScore,\n}) => {\n  const scoreInt = Math.ceil(result?.score ?? 0);\n  const scoreStar =\n    result && `${'★'.repeat(scoreInt)}${'☆'.repeat(5 - scoreInt)}`;\n\n  const shareText = !showScore\n    ? `ダジャレ：${text}\\nダジャレと判定できませんでした。\\n\\n#ダジャレ判定 by @rits_dajare\\n\\nhttps://rits-dajare.github.io/judge`\n    : scoreStar &&\n      `ダジャレ：${text}\\nスコア：${scoreStar}\\n\\n#ダジャレ判定 by @rits_dajare\\n\\nhttps://rits-dajare.github.io/judge`;\n\n  return (\n    <Box as=\"main\" id=\"main\" className={className}>\n      <SEO\n        title=\"ダジャレ判定\"\n        description=\"あなたのダジャレを判定します！\"\n        pathname=\"/judge\"\n      />\n      <Header />\n      <Heading as=\"h1\">ダジャレ判定</Heading>\n      <Paragraph>あなたのダジャレを判定します！</Paragraph>\n      <Paragraph>ダジャレを入力し、「判定！」ボタンを押してください</Paragraph>\n      <form onSubmit={onSubmit}>\n        <Label htmlFor=\"dajare\" />\n        <div className=\"input-group\">\n          <Input\n            type=\"text\"\n            name=\"dajare\"\n            value={text}\n            onChange={onInput}\n            placeholder=\"布団がふっとんだ\"\n            disabled={isSubmitting}\n            required\n            className=\"input-text\"\n            minLength={4}\n            ref={inputTextRef}\n            autoFocus\n          />\n          <Button type=\"submit\" className=\"submit\" disabled={isSubmitting}>\n            判定！\n          </Button>\n        </div>\n      </form>\n      {(result !== null || isSubmitting) && (\n        <Box className=\"result\">\n          {isSubmitting && <Spinner className=\"loading\" />}\n          {result !== null && !showScore && (\n            <Paragraph>ダジャレではありません</Paragraph>\n          )}\n          {showScore && (\n            <Paragraph>\n              あなたのダジャレのスコアは\n              {scoreStar}\n              です！\n            </Paragraph>\n          )}\n        </Box>\n      )}\n      <div className=\"buttons\">\n        {result && shareText && <ShareButton sns=\"twitter\" text={shareText} />}\n        {result !== null && !showScore && (\n          <Button type=\"button\" onClick={forceShowScore}>\n            ダジャレとして判定する\n          </Button>\n        )}\n      </div>\n      {error && (\n        <Message>\n          {/* eslint-disable no-nested-ternary */}\n          {typeof error === 'string'\n            ? error\n            : typeof error.message === 'string'\n            ? error.message\n            : 'エラーが発生しました'}\n          {/* eslint-enable */}\n        </Message>\n      )}\n    </Box>\n  );\n};\n\nconst StyledComponent = styled(Component)`\n  .input-group {\n    display: flex;\n  }\n\n  .input-text {\n    flex: 1 1;\n  }\n\n  .input-text,\n  .submit {\n    ${css({ margin: 3 })}\n  }\n\n  .result {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    max-width: 30em;\n    height: 15em;\n    margin: 1em auto;\n    border-radius: 1em;\n    border: solid 1px;\n    ${css({ borderColor: 'muted' })}\n  }\n\n  .loading {\n    width: 4em;\n    height: 4em;\n    margin: 0 auto;\n  }\n\n  .buttons {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    button {\n      margin: 1em;\n    }\n  }\n`;\n\nconst JudgePage: React.FC = () => {\n  const [text, setText] = useState<string>('');\n  const { result, isSubmitting, judge, error } = useJudgeApi();\n  const inputTextRef = useRef<HTMLInputElement>(null);\n  const [forcedShowScore, setForcedShowScore] = useState<boolean>(false);\n\n  const onSubmit: ComponentProps['onSubmit'] = (event) => {\n    event.preventDefault();\n\n    setForcedShowScore(false);\n\n    if (validate(text)) judge(text);\n  };\n\n  const onInput: ComponentProps['onInput'] = (event) => {\n    const { value } = event.currentTarget;\n\n    setText(value);\n\n    /* eslint-disable no-unused-expressions */\n    if (validate(value)) {\n      inputTextRef.current?.setCustomValidity('');\n    } else {\n      inputTextRef.current?.setCustomValidity(\n        '空白以外の文字を入力してください'\n      );\n    }\n    /* eslint-enable */\n  };\n\n  return (\n    <StyledComponent\n      text={text}\n      result={result}\n      error={error}\n      isSubmitting={isSubmitting}\n      onInput={onInput}\n      onSubmit={onSubmit}\n      inputTextRef={inputTextRef}\n      showScore={result?.is_dajare || forcedShowScore}\n      forceShowScore={(): void => setForcedShowScore(true)}\n    />\n  );\n};\n\nexport default JudgePage;\n"],"sourceRoot":""}