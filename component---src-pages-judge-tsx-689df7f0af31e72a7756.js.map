{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-repeat.js","webpack:///./src/hooks/use-judge-api.ts","webpack:///./src/pages/judge.tsx"],"names":["$export","P","repeat","toInteger","defined","module","exports","count","str","String","this","res","n","Infinity","RangeError","fetchApi","type","text","a","url","baseURL","encodeURIComponent","fetch","result","json","validate","replace","length","useJudgeApi","useState","isSubmitting","setIsSubmitting","setResult","setText","error","setError","useEffect","Promise","all","then","results","integratedResult","reduce","previous","current","catch","e","judge","Component","onSubmit","onInput","className","inputTextRef","showScore","forceShowScore","scoreInt","Math","ceil","score","scoreStar","shareText","as","id","title","description","pathname","htmlFor","name","value","onChange","placeholder","disabled","required","minLength","ref","autoFocus","sns","onClick","message","StyledComponent","css","margin","borderColor","JudgePage","useRef","forcedShowScore","setForcedShowScore","event","currentTarget","setCustomValidity","preventDefault","is_joke"],"mappings":"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","file":"component---src-pages-judge-tsx-689df7f0af31e72a7756.js","sourcesContent":["var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","import { useState, useEffect } from 'react';\nimport {\n  IntegratedResult,\n  JudgeResult,\n  EvaluateResult,\n  ReadingResult,\n} from 'src/types/api';\n\nexport type JudgeText = string;\n\nexport type ReturnValue = {\n  isSubmitting: boolean;\n  judge: (text: JudgeText) => void;\n  result: IntegratedResult | null;\n  error: string | Error | null;\n};\n\nconst baseURL =\n  'https://script.google.com/macros/s/AKfycbz6gJafNJO-Q8R5fqOP5XiklkVqeJAaePpDTcHIowR4JSxkRqr_/exec?url=http://abelab.dev:8080';\n\nexport type Results = {\n  judge: JudgeResult;\n  evaluate: EvaluateResult;\n  reading: ReadingResult;\n};\n\nconst fetchApi = async <T extends keyof Results>(\n  type: T,\n  text: string\n): Promise<Results[T]> => {\n  const url = `${baseURL}/joke/${type}?joke=${encodeURIComponent(text)}`;\n\n  const result = await fetch(url);\n  return result.json();\n};\n\nexport const validate = (text: string): boolean =>\n  text.replace(/\\s/g, '').length !== 0;\n\nconst useJudgeApi = (): ReturnValue => {\n  const [isSubmitting, setIsSubmitting] = useState<ReturnValue['isSubmitting']>(\n    false\n  );\n  const [result, setResult] = useState<ReturnValue['result']>(null);\n  const [text, setText] = useState<JudgeText | null>(null);\n  const [error, setError] = useState<ReturnValue['error']>(null);\n\n  useEffect((): (() => void) => {\n    if (text === null || text === '') {\n      setIsSubmitting(false);\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return (): void => {};\n    }\n\n    setIsSubmitting(true);\n    setResult(null);\n\n    Promise.all([\n      fetchApi('judge', text),\n      fetchApi('evaluate', text),\n      fetchApi('reading', text),\n    ])\n      .then((results) => {\n        const integratedResult = results.reduce<Partial<IntegratedResult>>(\n          (previous, current) => ({ ...previous, ...current }),\n          {}\n        );\n        setIsSubmitting(false);\n        setResult(integratedResult as IntegratedResult);\n      })\n      .catch((e) => {\n        setError(e);\n      });\n\n    return (): void => {\n      setIsSubmitting(false);\n    };\n  }, [text]);\n\n  return { isSubmitting, judge: setText, result, error };\n};\n\nexport default useJudgeApi;\n","import React, { useState, useRef } from 'react';\nimport {\n  Heading,\n  Label,\n  Input,\n  Button,\n  Box,\n  css,\n  Spinner,\n  Message,\n} from 'theme-ui';\nimport Paragraph from 'src/components/paragraph';\nimport useJudgeApi, { ReturnValue, validate } from 'src/hooks/use-judge-api';\nimport styled from '@emotion/styled';\nimport { SEO, ShareButton } from 'src/components';\n\ntype ComponentProps = {\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  onInput: (event: React.FormEvent<HTMLInputElement>) => void;\n  text: string;\n  className?: string;\n  inputTextRef: React.Ref<HTMLInputElement>;\n  showScore: boolean;\n  forceShowScore: () => unknown;\n} & Omit<ReturnValue, 'judge'>;\n\nconst Component: React.FC<ComponentProps> = ({\n  onSubmit,\n  text,\n  onInput,\n  result,\n  error,\n  isSubmitting,\n  className,\n  inputTextRef,\n  showScore,\n  forceShowScore,\n}) => {\n  const scoreInt = Math.ceil(result?.score ?? 0);\n  const scoreStar =\n    result && `${'★'.repeat(scoreInt)}${'☆'.repeat(5 - scoreInt)}`;\n\n  const shareText = !showScore\n    ? `ダジャレ：${text}\\nダジャレと判定できませんでした。\\n\\n#ダジャレ判定 by @rits_dajare\\n\\nhttps://rits-dajare.github.io/judge`\n    : scoreStar &&\n      `ダジャレ：${text}\\nスコア：${scoreStar}\\n\\n#ダジャレ判定 by @rits_dajare\\n\\nhttps://rits-dajare.github.io/judge`;\n\n  return (\n    <Box as=\"main\" id=\"main\" className={className}>\n      <SEO\n        title=\"ダジャレ判定\"\n        description=\"あなたのダジャレを判定します！\"\n        pathname=\"/judge\"\n      />\n      <Heading as=\"h1\">立命館ダジャレサークル ダジャレ判定</Heading>\n      <Paragraph>あなたのダジャレを判定します！</Paragraph>\n      <Paragraph>ダジャレを入力し、「判定！」ボタンを押してください</Paragraph>\n      <form onSubmit={onSubmit}>\n        <Label htmlFor=\"dajare\" />\n        <div className=\"input-group\">\n          <Input\n            type=\"text\"\n            name=\"dajare\"\n            value={text}\n            onChange={onInput}\n            placeholder=\"布団がふっとんだ\"\n            disabled={isSubmitting}\n            required\n            className=\"input-text\"\n            minLength={4}\n            ref={inputTextRef}\n            autoFocus\n          />\n          <Button type=\"submit\" className=\"submit\" disabled={isSubmitting}>\n            判定！\n          </Button>\n        </div>\n      </form>\n      {(result !== null || isSubmitting) && (\n        <Box className=\"result\">\n          {isSubmitting && <Spinner className=\"loading\" />}\n          {result !== null && !showScore && (\n            <Paragraph>ダジャレではありません</Paragraph>\n          )}\n          {showScore && (\n            <Paragraph>\n              あなたのダジャレのスコアは\n              {scoreStar}\n              です！\n            </Paragraph>\n          )}\n        </Box>\n      )}\n      <div className=\"buttons\">\n        {result && shareText && <ShareButton sns=\"twitter\" text={shareText} />}\n        {result !== null && !showScore && (\n          <Button type=\"button\" onClick={forceShowScore}>\n            ダジャレとして判定する\n          </Button>\n        )}\n      </div>\n      {error && (\n        <Message>\n          {/* eslint-disable no-nested-ternary */}\n          {typeof error === 'string'\n            ? error\n            : typeof error.message === 'string'\n            ? error.message\n            : 'エラーが発生しました'}\n          {/* eslint-enable */}\n        </Message>\n      )}\n    </Box>\n  );\n};\n\nconst StyledComponent = styled(Component)`\n  .input-group {\n    display: flex;\n  }\n\n  .input-text {\n    flex: 1 1;\n  }\n\n  .input-text,\n  .submit {\n    ${css({ margin: 3 })}\n  }\n\n  .result {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    max-width: 30em;\n    height: 15em;\n    margin: 1em auto;\n    border-radius: 1em;\n    border: solid 1px;\n    ${css({ borderColor: 'muted' })}\n  }\n\n  .loading {\n    width: 4em;\n    height: 4em;\n    margin: 0 auto;\n  }\n\n  .buttons {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    button {\n      margin: 1em;\n    }\n  }\n`;\n\nconst JudgePage: React.FC = () => {\n  const [text, setText] = useState<string>('');\n  const { result, isSubmitting, judge, error } = useJudgeApi();\n  const inputTextRef = useRef<HTMLInputElement>(null);\n  const [forcedShowScore, setForcedShowScore] = useState<boolean>(false);\n\n  const onSubmit: ComponentProps['onSubmit'] = (event) => {\n    event.preventDefault();\n\n    setForcedShowScore(false);\n\n    if (validate(text)) judge(text);\n  };\n\n  const onInput: ComponentProps['onInput'] = (event) => {\n    const { value } = event.currentTarget;\n\n    setText(value);\n\n    /* eslint-disable no-unused-expressions */\n    if (validate(value)) {\n      inputTextRef.current?.setCustomValidity('');\n    } else {\n      inputTextRef.current?.setCustomValidity(\n        '空白以外の文字を入力してください'\n      );\n    }\n    /* eslint-enable */\n  };\n\n  return (\n    <StyledComponent\n      text={text}\n      result={result}\n      error={error}\n      isSubmitting={isSubmitting}\n      onInput={onInput}\n      onSubmit={onSubmit}\n      inputTextRef={inputTextRef}\n      showScore={result?.is_joke || forcedShowScore}\n      forceShowScore={(): void => setForcedShowScore(true)}\n    />\n  );\n};\n\nexport default JudgePage;\n"],"sourceRoot":""}